name: GitHub Actions CI Pipeline
run-name: ${{ github.actor }} is running pipeline ðŸš€

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint_and_test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18.12.0]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Cloning...
        uses: actions/checkout@v3
      - name: Installing node...
        uses: actions/setup-node@v3
        with:
          node-version:  ${{ matrix.node }}
      - name: NPM Install
        run: npm ci
      - name: Lint
        run: | 
          npm run lint  
          npm run lint:scss
          npm run lint:types
      - name: Unit Tests
        run: npm run test:unit
      - name: Screenshot Tests
        id: screenshot_test
        run: |
          npm run storybook:build
          npm run test:screenshot:ci
      - name: Generate Screenshot Tests Report
        if: ${{ failure() && steps.screenshot_test.conclusion == 'failure' }}
        run: |
          npm run visual:report:json
          npm run visual:report:html
      - name: Upload artifact
        if: ${{ failure() && steps.screenshot_test.conclusion == 'failure' }}
        uses: actions/upload-pages-artifact@v3
        with: 
          path: 'reports'

  deploy_test_reports:
    permissions:
      contents: read
      pages: write
      id-token: write

    runs-on: ubuntu-latest

    if: ${{ always() }}
    needs: [lint_and_test]
    environment:
      name: github-pages
      url: '${{ steps.deployment.outputs.page_url}}screenshot.html'

    steps:
      - name: Check whether artifact exists
        uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Setup Github Pages
        uses: actions/configure-pages@v4
      - name: Deploy Screenshot Tests Report
        id: deployment
        uses: actions/deploy-pages@v4
 
  # build:
  #   needs: [lint_and_test]
  #   steps:
  #     - run: npm run build:prod
  
        

  